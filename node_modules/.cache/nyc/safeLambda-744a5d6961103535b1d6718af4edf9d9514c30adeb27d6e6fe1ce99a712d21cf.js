function cov_xbt5wqj6t(){var path="/Users/tommix/DEVELOPMENT/safe-evaluate-expression/src/safeLambda.js";var hash="9c99eec24200f68c50ea19d5ed67febb2106beb9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/tommix/DEVELOPMENT/safe-evaluate-expression/src/safeLambda.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:36}},"1":{start:{line:6,column:23},end:{line:6,column:57}},"2":{start:{line:7,column:23},end:{line:7,column:35}},"3":{start:{line:13,column:16},end:{line:13,column:59}},"4":{start:{line:14,column:17},end:{line:14,column:94}},"5":{start:{line:16,column:2},end:{line:16,column:22}},"6":{start:{line:23,column:16},end:{line:23,column:59}},"7":{start:{line:24,column:2},end:{line:24,column:50}},"8":{start:{line:32,column:19},end:{line:32,column:37}},"9":{start:{line:33,column:21},end:{line:33,column:47}},"10":{start:{line:34,column:16},end:{line:34,column:35}},"11":{start:{line:36,column:2},end:{line:41,column:4}},"12":{start:{line:37,column:19},end:{line:37,column:21}},"13":{start:{line:38,column:4},end:{line:38,column:65}},"14":{start:{line:38,column:36},end:{line:38,column:62}},"15":{start:{line:40,column:4},end:{line:40,column:47}},"16":{start:{line:44,column:0},end:{line:44,column:31}}},fnMap:{"0":{name:"getParamNames",decl:{start:{line:12,column:9},end:{line:12,column:22}},loc:{start:{line:12,column:29},end:{line:17,column:1}},line:12},"1":{name:"getLambdaBody",decl:{start:{line:22,column:9},end:{line:22,column:22}},loc:{start:{line:22,column:29},end:{line:25,column:1}},line:22},"2":{name:"defaultLambda",decl:{start:{line:31,column:9},end:{line:31,column:22}},loc:{start:{line:31,column:36},end:{line:42,column:1}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:36,column:9},end:{line:36,column:10}},loc:{start:{line:36,column:28},end:{line:41,column:3}},line:36},"4":{name:"(anonymous_4)",decl:{start:{line:38,column:18},end:{line:38,column:19}},loc:{start:{line:38,column:36},end:{line:38,column:62}},line:38}},branchMap:{"0":{loc:{start:{line:16,column:9},end:{line:16,column:21}},type:"binary-expr",locations:[{start:{line:16,column:9},end:{line:16,column:15}},{start:{line:16,column:19},end:{line:16,column:21}}],line:16}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9c99eec24200f68c50ea19d5ed67febb2106beb9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_xbt5wqj6t=function(){return actualCoverage;};}return actualCoverage;}cov_xbt5wqj6t();const factory=(cov_xbt5wqj6t().s[0]++,require("./factory"));//**************************************************************
// RegEx to find  parameters, comments and arguments
//**************************************************************
const STRIP_COMMENTS=(cov_xbt5wqj6t().s[1]++,/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm);const ARGUMENT_NAMES=(cov_xbt5wqj6t().s[2]++,/([^\s,]+)/g);//**************************************************************
// Returns regular function parameters names
//**************************************************************
function getParamNames(func){cov_xbt5wqj6t().f[0]++;const fnStr=(cov_xbt5wqj6t().s[3]++,func.toString().replace(STRIP_COMMENTS,""));const result=(cov_xbt5wqj6t().s[4]++,fnStr.slice(fnStr.indexOf("(")+1,fnStr.indexOf(")")).match(ARGUMENT_NAMES));cov_xbt5wqj6t().s[5]++;return(cov_xbt5wqj6t().b[0][0]++,result)||(cov_xbt5wqj6t().b[0][1]++,[]);}//**************************************************************
// Returns lambda function body
//**************************************************************
function getLambdaBody(func){cov_xbt5wqj6t().f[1]++;const fnStr=(cov_xbt5wqj6t().s[6]++,func.toString().replace(STRIP_COMMENTS,""));cov_xbt5wqj6t().s[7]++;return fnStr.substring(fnStr.indexOf("=>")+3);}//**************************************************************
// Get a lambda function as input and optional parameters
// to default undefined params in returned function
//**************************************************************
function defaultLambda(func,undef){cov_xbt5wqj6t().f[2]++;const evaluate=(cov_xbt5wqj6t().s[8]++,factory({undef}));const expression=(cov_xbt5wqj6t().s[9]++,getLambdaBody(func).trim());const names=(cov_xbt5wqj6t().s[10]++,getParamNames(func));cov_xbt5wqj6t().s[11]++;return function(...vars){cov_xbt5wqj6t().f[3]++;const params=(cov_xbt5wqj6t().s[12]++,{});cov_xbt5wqj6t().s[13]++;names.forEach((name,index)=>{cov_xbt5wqj6t().f[4]++;cov_xbt5wqj6t().s[14]++;return params[name]=vars[index];});cov_xbt5wqj6t().s[15]++;return evaluate(expression,params,undef);};}cov_xbt5wqj6t().s[16]++;module.exports=defaultLambda;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhZmVMYW1iZGEuanMiXSwibmFtZXMiOlsiZmFjdG9yeSIsInJlcXVpcmUiLCJTVFJJUF9DT01NRU5UUyIsIkFSR1VNRU5UX05BTUVTIiwiZ2V0UGFyYW1OYW1lcyIsImZ1bmMiLCJmblN0ciIsInRvU3RyaW5nIiwicmVwbGFjZSIsInJlc3VsdCIsInNsaWNlIiwiaW5kZXhPZiIsIm1hdGNoIiwiZ2V0TGFtYmRhQm9keSIsInN1YnN0cmluZyIsImRlZmF1bHRMYW1iZGEiLCJ1bmRlZiIsImV2YWx1YXRlIiwiZXhwcmVzc2lvbiIsInRyaW0iLCJuYW1lcyIsInZhcnMiLCJwYXJhbXMiLCJmb3JFYWNoIiwibmFtZSIsImluZGV4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IitsRkFlWTt5RkFmWixLQUFNQSxDQUFBQSxPQUFPLHlCQUFHQyxPQUFPLENBQUMsV0FBRCxDQUFWLENBQWIsQ0FFQTtBQUNBO0FBQ0E7QUFDQSxLQUFNQyxDQUFBQSxjQUFjLHlCQUFHLGtDQUFILENBQXBCLENBQ0EsS0FBTUMsQ0FBQUEsY0FBYyx5QkFBRyxZQUFILENBQXBCLENBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBU0MsQ0FBQUEsYUFBVCxDQUF1QkMsSUFBdkIsQ0FBNkIsd0JBQzNCLEtBQU1DLENBQUFBLEtBQUsseUJBQUdELElBQUksQ0FBQ0UsUUFBTCxHQUFnQkMsT0FBaEIsQ0FBd0JOLGNBQXhCLENBQXdDLEVBQXhDLENBQUgsQ0FBWCxDQUNBLEtBQU1PLENBQUFBLE1BQU0seUJBQUdILEtBQUssQ0FBQ0ksS0FBTixDQUFZSixLQUFLLENBQUNLLE9BQU4sQ0FBYyxHQUFkLEVBQXFCLENBQWpDLENBQW9DTCxLQUFLLENBQUNLLE9BQU4sQ0FBYyxHQUFkLENBQXBDLEVBQXdEQyxLQUF4RCxDQUE4RFQsY0FBOUQsQ0FBSCxDQUFaLENBRjJCLHVCQUkzQixNQUFPLDJCQUFBTSxNQUFNLDhCQUFJLEVBQUosQ0FBYixDQUNELENBRUQ7QUFDQTtBQUNBO0FBQ0EsUUFBU0ksQ0FBQUEsYUFBVCxDQUF1QlIsSUFBdkIsQ0FBNkIsd0JBQzNCLEtBQU1DLENBQUFBLEtBQUsseUJBQUdELElBQUksQ0FBQ0UsUUFBTCxHQUFnQkMsT0FBaEIsQ0FBd0JOLGNBQXhCLENBQXdDLEVBQXhDLENBQUgsQ0FBWCxDQUQyQix1QkFFM0IsTUFBT0ksQ0FBQUEsS0FBSyxDQUFDUSxTQUFOLENBQWdCUixLQUFLLENBQUNLLE9BQU4sQ0FBYyxJQUFkLEVBQXNCLENBQXRDLENBQVAsQ0FDRCxDQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBU0ksQ0FBQUEsYUFBVCxDQUF1QlYsSUFBdkIsQ0FBNkJXLEtBQTdCLENBQW9DLHdCQUNsQyxLQUFNQyxDQUFBQSxRQUFRLHlCQUFHakIsT0FBTyxDQUFDLENBQUVnQixLQUFGLENBQUQsQ0FBVixDQUFkLENBQ0EsS0FBTUUsQ0FBQUEsVUFBVSx5QkFBR0wsYUFBYSxDQUFDUixJQUFELENBQWIsQ0FBb0JjLElBQXBCLEVBQUgsQ0FBaEIsQ0FDQSxLQUFNQyxDQUFBQSxLQUFLLDBCQUFHaEIsYUFBYSxDQUFDQyxJQUFELENBQWhCLENBQVgsQ0FIa0Msd0JBS2xDLE1BQU8sVUFBVSxHQUFHZ0IsSUFBYixDQUFtQix3QkFDeEIsS0FBTUMsQ0FBQUEsTUFBTSwwQkFBRyxFQUFILENBQVosQ0FEd0Isd0JBRXhCRixLQUFLLENBQUNHLE9BQU4sQ0FBYyxDQUFDQyxJQUFELENBQU9DLEtBQVAsR0FBa0Isc0RBQUFILENBQUFBLE1BQU0sQ0FBQ0UsSUFBRCxDQUFOLENBQWVILElBQUksQ0FBQ0ksS0FBRCxDQUFuQixDQUEwQixDQUExRCxFQUZ3Qix3QkFJeEIsTUFBT1IsQ0FBQUEsUUFBUSxDQUFDQyxVQUFELENBQWFJLE1BQWIsQ0FBcUJOLEtBQXJCLENBQWYsQ0FDRCxDQUxELENBTUQsQyx3QkFFRFUsTUFBTSxDQUFDQyxPQUFQLENBQWlCWixhQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZhY3RvcnkgPSByZXF1aXJlKFwiLi9mYWN0b3J5XCIpO1xuXG4vLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4vLyBSZWdFeCB0byBmaW5kICBwYXJhbWV0ZXJzLCBjb21tZW50cyBhbmQgYXJndW1lbnRzXG4vLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5jb25zdCBTVFJJUF9DT01NRU5UUyA9IC8oKFxcL1xcLy4qJCl8KFxcL1xcKltcXHNcXFNdKj9cXCpcXC8pKS9nbTtcbmNvbnN0IEFSR1VNRU5UX05BTUVTID0gLyhbXlxccyxdKykvZztcblxuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuLy8gUmV0dXJucyByZWd1bGFyIGZ1bmN0aW9uIHBhcmFtZXRlcnMgbmFtZXNcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbmZ1bmN0aW9uIGdldFBhcmFtTmFtZXMoZnVuYykge1xuICBjb25zdCBmblN0ciA9IGZ1bmMudG9TdHJpbmcoKS5yZXBsYWNlKFNUUklQX0NPTU1FTlRTLCBcIlwiKTtcbiAgY29uc3QgcmVzdWx0ID0gZm5TdHIuc2xpY2UoZm5TdHIuaW5kZXhPZihcIihcIikgKyAxLCBmblN0ci5pbmRleE9mKFwiKVwiKSkubWF0Y2goQVJHVU1FTlRfTkFNRVMpO1xuXG4gIHJldHVybiByZXN1bHQgfHwgW107XG59XG5cbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbi8vIFJldHVybnMgbGFtYmRhIGZ1bmN0aW9uIGJvZHlcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbmZ1bmN0aW9uIGdldExhbWJkYUJvZHkoZnVuYykge1xuICBjb25zdCBmblN0ciA9IGZ1bmMudG9TdHJpbmcoKS5yZXBsYWNlKFNUUklQX0NPTU1FTlRTLCBcIlwiKTtcbiAgcmV0dXJuIGZuU3RyLnN1YnN0cmluZyhmblN0ci5pbmRleE9mKFwiPT5cIikgKyAzKTtcbn1cblxuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuLy8gR2V0IGEgbGFtYmRhIGZ1bmN0aW9uIGFzIGlucHV0IGFuZCBvcHRpb25hbCBwYXJhbWV0ZXJzXG4vLyB0byBkZWZhdWx0IHVuZGVmaW5lZCBwYXJhbXMgaW4gcmV0dXJuZWQgZnVuY3Rpb25cbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbmZ1bmN0aW9uIGRlZmF1bHRMYW1iZGEoZnVuYywgdW5kZWYpIHtcbiAgY29uc3QgZXZhbHVhdGUgPSBmYWN0b3J5KHsgdW5kZWYgfSk7XG4gIGNvbnN0IGV4cHJlc3Npb24gPSBnZXRMYW1iZGFCb2R5KGZ1bmMpLnRyaW0oKTtcbiAgY29uc3QgbmFtZXMgPSBnZXRQYXJhbU5hbWVzKGZ1bmMpO1xuXG4gIHJldHVybiBmdW5jdGlvbiAoLi4udmFycykge1xuICAgIGNvbnN0IHBhcmFtcyA9IHt9O1xuICAgIG5hbWVzLmZvckVhY2goKG5hbWUsIGluZGV4KSA9PiAocGFyYW1zW25hbWVdID0gdmFyc1tpbmRleF0pKTtcblxuICAgIHJldHVybiBldmFsdWF0ZShleHByZXNzaW9uLCBwYXJhbXMsIHVuZGVmKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkZWZhdWx0TGFtYmRhO1xuIl19